#注意：下面这些属性必须配置在bootstrap.properties文件中，这样config-server中的配置信息才能正确加载
#注意：从config-server中获取的外部配置信息，优先级高于本地内容，从而实现了外部化配置

#配置文件规则中的${application}部分
spring.application.name=config-client

server.port=7002

#-----------------------------------------------
#服务化配置中心：服务注册中心地址，用于服务的注册与发现
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka
#开启通过服务来访问config-server
spring.cloud.config.discovery.enabled=true
#指定config-server注册的服务名
spring.cloud.config.discovery.service-id=config-server
#定位git中的资源
spring.cloud.config.profile=dev
#关闭客户端的权限拦截，否则使用refresh端点刷新配置信息时，无法刷新客户端配置
management.security.enabled=false
#设置客户端有限判断config-server获取是否正常，并快速相应失败内容
spring.cloud.config.fail-fast=true
#-----------------------------------------------


#-----------------------------------------------
#URI指定配置中心：config-client直接连接config-server是使用的配置，不注册服务时
#配置为难规则中的${profile}部分
#spring.cloud.config.profile=dev
#配置文件规则中的${label}部分
#spring.cloud.config.label=master
#配置中心的config-server地址
#spring.cloud.config.uri=http://localhost:7001/
#-----------------------------------------------

#logging.level.root=error

